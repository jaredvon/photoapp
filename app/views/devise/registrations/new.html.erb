<h1 align="center">Sign Up</h1>

<%= form_for resource, as: resource_name, url: registration_path(resource_name),html:{ id:"sign-up-and-pay"} do |f| %>
  <%= render partial:"shared/model_validation_error",locals:{ object: resource, error_message: "Please try again!"}%>
  <div class="form-group">
    <%= f.label :email %>
    <%= f.email_field :email, autofocus: true, autocomplete: 'email', class: 'form-control' %>
  </div>

  <div class="form-group">
    <%= f.label :password %>
    <%= f.password_field :password, autocomplete: 'current-password', class: 'form-control' %>

    <% if @minimum_password_length %>
      <small class="form-text text-muted"><%= t('devise.shared.minimum_password_length', count: @minimum_password_length) %></small>
    <% end %>
  </div>

  <div class="form-group">
    <%= f.label :password_confirmation %>
    <%= f.password_field :password_confirmation, autocomplete: 'current-password', class: 'form-control' %>
  </div>
  
  <%= f.fields_for :checkout_form do |form|%>
    <%= form.label :card_number, "Credit Card Number", html: {class: "hosted-fields--label"} %>
    <div id="card-number" class="hosted-field"></div>

    <%= form.label :expiration_date, "Expiration Date", html: {class: "hosted-fields--label"} %>
    <div id="expiration-date" class="hosted-field"></div>

    <%= form.label :cvv, "CVV", html: {class: "hosted-fields--label"} %>
    <div id="cvv" class="hosted-field"></div>

    <%= form.hidden_field "payment_method_nonce",id:"payment-method-nounce" %>
  <% end %>
    
    <div class="form-group">
      <%= f.submit 'Pay and Sign Up',disabled: true, class: 'btn btn-primary',id:"submit-payment-btn" %>
    </div>
  <% end %>

<script>
    var form = document.querySelector('#sign-up-and-pay');
    var submit = document.querySelector("#submit-payment-btn");
    var authorization = '<%= @client_token %>';
    
    braintree.client.create({
      authorization: authorization
    }, function (clientErr, clientInstance) {
      if (clientErr) {
        return;
      }
    
      braintree.hostedFields.create({
        client: clientInstance,
        fields: {
          number: {
            selector: '#card-number',
            placeholder: '4111 1111 1111 1111'
          },
          cvv: {
            selector: '#cvv',
            placeholder: '123'
          },
          expirationDate: {
            selector: '#expiration-date',
            placeholder: '10/2019'
          }
        }
      }, function (hostedFieldsErr, hostedFieldsInstance) {
        if (hostedFieldsErr) {
          return;
        }
    
        submit.removeAttribute('disabled');
    
        form.addEventListener('submit', function (event) {
          event.preventDefault();
          hostedFieldsInstance.tokenize(function (tokenizeErr, payload) {
            if (tokenizeErr) {
              alert("Payment Authentication Error!")
              location.reload()
              return;
            }
            document.querySelector('#payment-method-nounce').value = payload.nonce;
            form.submit();
          });
        }, false);
      });
    });
</script>
